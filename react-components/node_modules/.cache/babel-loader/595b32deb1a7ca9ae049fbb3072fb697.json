{"ast":null,"code":"var _jsxFileName = \"/workspace/React--PRJ5--Website/react-components/src/components/HooksCounter.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function HooksCounter(props) {\n  _s();\n  // count: a new state property\n  // setCount: a method to update count\n  // useState(0): initialize count to 0\n  const [count, setCount] = useState(0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"greeting\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Hello \", props.name, \"! I'm a functional component with hooks!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"You clicked \", count, \" times\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCount(count => count + 1),\n      children: \"Increment Counter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n}\n_s(HooksCounter, \"oDgYfYHkD9Wkv4hrAPCkI/ev3YU=\");\n_c = HooksCounter;\nvar _c;\n$RefreshReg$(_c, \"HooksCounter\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","HooksCounter","props","_s","count","setCount","className","children","name","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/workspace/React--PRJ5--Website/react-components/src/components/HooksCounter.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nexport default function HooksCounter(props) {\n  // count: a new state property\n  // setCount: a method to update count\n  // useState(0): initialize count to 0\n  const [count, setCount] = useState(0);\n\n  return (\n    <div className=\"greeting\">\n      <h1>Hello {props.name}! I'm a functional component with hooks!</h1>\n      <h2>You clicked {count} times</h2>\n      <button onClick={() => setCount(count => count + 1)}>Increment Counter</button>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,eAAe,SAASC,YAAYA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAC1C;EACA;EACA;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;EAErC,oBACEE,OAAA;IAAKM,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACvBP,OAAA;MAAAO,QAAA,GAAI,QAAM,EAACL,KAAK,CAACM,IAAI,EAAC,0CAAwC;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnEZ,OAAA;MAAAO,QAAA,GAAI,cAAY,EAACH,KAAK,EAAC,QAAM;IAAA;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClCZ,OAAA;MAAQa,OAAO,EAAEA,CAAA,KAAMR,QAAQ,CAACD,KAAK,IAAIA,KAAK,GAAG,CAAC,CAAE;MAAAG,QAAA,EAAC;IAAiB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5E,CAAC;AAEV;AAACT,EAAA,CAbuBF,YAAY;AAAAa,EAAA,GAAZb,YAAY;AAAA,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}